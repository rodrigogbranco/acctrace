/**
 *
 * $Id$
 */
package br.ufms.facom.acctrace.model.validation;

import org.eclipse.emf.common.util.EList;
import org.obeonetwork.dsl.requirement.Repository;

import br.ufms.facom.acctrace.model.Reference;
import br.ufms.facom.acctrace.model.RequirementFilter;

// TODO: Auto-generated Javadoc
/**
 * A sample validator interface for
 * {@link br.ufms.facom.acctrace.model.AccTraceModel}. This doesn't really do
 * anything, and it's not a real EMF artifact. It was generated by the
 * org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's
 * code generator can be extended. This can be disabled with -vmargs
 * -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface AccTraceModelValidator {

	/**
	 * Validate.
	 * 
	 * @return true, if successful
	 */
	boolean validate();

	/**
	 * Validate references.
	 * 
	 * @param value
	 *            the value
	 * @return true, if successful
	 */
	boolean validateReferences(EList<Reference> value);

	/**
	 * Validate filter type.
	 * 
	 * @param value
	 *            the value
	 * @return true, if successful
	 */
	boolean validateFilterType(EList<RequirementFilter> value);

	/**
	 * Validate requirement repositories.
	 * 
	 * @param value
	 *            the value
	 * @return true, if successful
	 */
	boolean validateRequirementRepositories(EList<Repository> value);
}
